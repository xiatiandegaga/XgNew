// <auto-generated />
using System;
using Cloud.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace IdentityApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entity.Dictionary.GlobalData", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("code")
                        .HasComment("编码");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at")
                        .HasComment("创建时间");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by")
                        .HasComment("创建人");

                    b.Property<int>("DeletedStatus")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_status")
                        .HasComment("是否删除 1正常 2停用");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name")
                        .HasComment("名称");

                    b.Property<int>("SortNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("sort_no")
                        .HasComment("排序序号（数值越小越靠前）");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at")
                        .HasComment("更新时间");

                    b.Property<long>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by")
                        .HasComment("更新人");

                    b.HasKey("Id");

                    b.ToTable("dic_global_data", (string)null);
                });

            modelBuilder.Entity("Domain.Entity.Dictionary.GlobalDataDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("code")
                        .HasComment("字典明细编码");

                    b.Property<string>("ConstKey")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("const_key")
                        .HasComment("字典关键字");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at")
                        .HasComment("创建时间");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by")
                        .HasComment("创建人");

                    b.Property<int>("DeletedStatus")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_status")
                        .HasComment("是否删除 1正常 2停用");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name")
                        .HasComment("显示名称");

                    b.Property<string>("Remark")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("remark")
                        .HasComment("附加描述信息");

                    b.Property<int>("SortNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("sort_no")
                        .HasComment("排序序号（数值越小越靠前）");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at")
                        .HasComment("更新时间");

                    b.Property<long>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by")
                        .HasComment("更新人");

                    b.HasKey("Id");

                    b.ToTable("dic_global_data_detail", (string)null);
                });

            modelBuilder.Entity("Domain.Entity.Dictionary.ImgRule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at")
                        .HasComment("创建时间");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by")
                        .HasComment("创建人");

                    b.Property<int>("DeletedStatus")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_status")
                        .HasComment("是否删除 1正常 2停用");

                    b.Property<string>("ImgRuleCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("img_rule_code")
                        .HasComment("图片规则编码");

                    b.Property<string>("ImgRuleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("img_rule_name")
                        .HasComment("规则显示名称（示例：商品主图规则）");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("remark")
                        .HasComment("规则详细描述");

                    b.Property<int>("SortNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("sort_no")
                        .HasComment("排序序号（数值越小越靠前）");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at")
                        .HasComment("更新时间");

                    b.Property<long>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by")
                        .HasComment("更新人");

                    b.HasKey("Id");

                    b.ToTable("dic_img_rule", (string)null);
                });

            modelBuilder.Entity("Domain.Entity.Dictionary.ImgRuleDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at")
                        .HasComment("创建时间");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by")
                        .HasComment("创建人");

                    b.Property<int>("DeletedStatus")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_status")
                        .HasComment("是否删除 1正常 2停用");

                    b.Property<string>("DetailImage")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("detail_image")
                        .HasComment("详情图URL集合");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("end_time")
                        .HasComment("规则失效时间");

                    b.Property<string>("ImgRuleDetailCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("img_rule_detail_code")
                        .HasComment("明细唯一编码");

                    b.Property<string>("ImgRuleDetailName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("img_rule_detail_name")
                        .HasComment("明细显示名称");

                    b.Property<long>("ImgRuleId")
                        .HasColumnType("bigint")
                        .HasColumnName("img_rule_id")
                        .HasComment("关联规则主表ID");

                    b.Property<string>("LinkAddress")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("link_address")
                        .HasComment("直接跳转URL");

                    b.Property<string>("LinkKey")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnName("link_key")
                        .HasComment("链接关联键");

                    b.Property<string>("LinkType")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("link_type")
                        .HasComment("链接类型");

                    b.Property<string>("MainImg")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("main_img")
                        .HasComment("主图URL");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.Property<int>("SortNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("sort_no")
                        .HasComment("排序序号（数值越小越靠前）");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("start_time")
                        .HasComment("规则生效时间");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at")
                        .HasComment("更新时间");

                    b.Property<long>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by")
                        .HasComment("更新人");

                    b.HasKey("Id");

                    b.ToTable("dic_img_rule_detail", (string)null);
                });

            modelBuilder.Entity("Domain.Entity.Identity.Menu", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("Category")
                        .HasColumnType("integer")
                        .HasColumnName("category")
                        .HasComment("菜单类型: 1-目录, 2-菜单, 3-按钮");

                    b.Property<string>("Component")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("component")
                        .HasComment("前端组件路径 (如: /system/user/index)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at")
                        .HasComment("创建时间");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by")
                        .HasComment("创建人");

                    b.Property<int>("DeletedStatus")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_status")
                        .HasComment("是否删除 1正常 2停用");

                    b.Property<string>("MetaIcon")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("meta_icon")
                        .HasComment("菜单图标类名或URL");

                    b.Property<string>("MetaTitle")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("meta_title")
                        .HasComment("菜单显示标题");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name")
                        .HasComment("路由唯一标识名称");

                    b.Property<string>("Path")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("path")
                        .HasComment("路由访问路径 (如: /system/user)");

                    b.Property<string>("Permission")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("permission")
                        .HasComment("接口权限标识 (如: system:user:list)");

                    b.Property<long>("Pid")
                        .HasColumnType("bigint")
                        .HasColumnName("p_id")
                        .HasComment("父级菜单ID");

                    b.Property<string>("Redirect")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("redirect")
                        .HasComment("路由重定向路径");

                    b.Property<int>("SortNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("sort_no")
                        .HasComment("同级菜单排序序号");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at")
                        .HasComment("更新时间");

                    b.Property<long>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by")
                        .HasComment("更新人");

                    b.HasKey("Id");

                    b.ToTable("sys_menu", (string)null);
                });

            modelBuilder.Entity("Domain.Entity.Identity.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("CreateUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at")
                        .HasComment("创建时间");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by")
                        .HasComment("创建人");

                    b.Property<int>("DeletedStatus")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_status")
                        .HasComment("是否删除 1正常 2停用");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("description")
                        .HasComment("角色职责描述");

                    b.Property<int>("Level")
                        .HasColumnType("integer")
                        .HasColumnName("level")
                        .HasComment("角色等级：1-超级管理员, 2-普通管理员, 3-操作员");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name")
                        .HasComment("角色名称（如：系统管理员）");

                    b.Property<int>("SortNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("sort_no")
                        .HasComment("同级角色排序序号");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("UpdateUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at")
                        .HasComment("更新时间");

                    b.Property<long>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by")
                        .HasComment("更新人");

                    b.HasKey("Id");

                    b.ToTable("sys_role", (string)null);
                });

            modelBuilder.Entity("Domain.Entity.Identity.RoleMenu", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at")
                        .HasComment("创建时间");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by")
                        .HasComment("创建人");

                    b.Property<int>("DeletedStatus")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_status")
                        .HasComment("是否删除 1正常 2停用");

                    b.Property<long>("MenuId")
                        .HasColumnType("bigint")
                        .HasColumnName("menu_id")
                        .HasComment("关联菜单ID");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint")
                        .HasColumnName("role_id")
                        .HasComment("关联角色ID");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at")
                        .HasComment("更新时间");

                    b.Property<long>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by")
                        .HasComment("更新人");

                    b.HasKey("Id");

                    b.ToTable("sys_role_menu", (string)null);
                });

            modelBuilder.Entity("Domain.Entity.Identity.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("account")
                        .HasComment("登录账号");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at")
                        .HasComment("创建时间");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by")
                        .HasComment("创建人");

                    b.Property<int>("DeletedStatus")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_status")
                        .HasComment("是否删除 1正常 2停用");

                    b.Property<string>("Img")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("img")
                        .HasComment("头像URL地址");

                    b.Property<int>("IsSystem")
                        .HasColumnType("integer")
                        .HasColumnName("is_system")
                        .HasComment("是否系统管理员");

                    b.Property<int>("MemberPoint")
                        .HasColumnType("integer")
                        .HasColumnName("member_point")
                        .HasComment("会员积分");

                    b.Property<string>("Mobile")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("mobile")
                        .HasComment("用户手机号");

                    b.Property<string>("NickName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nick_name")
                        .HasComment("用户显示昵称");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("password")
                        .HasComment("加密后的密码");

                    b.Property<long>("Pid")
                        .HasColumnType("bigint")
                        .HasColumnName("pid")
                        .HasComment("直接上级用户ID");

                    b.Property<string>("RealName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("real_name")
                        .HasComment("用户真实姓名");

                    b.Property<long>("ReferId")
                        .HasColumnType("bigint")
                        .HasColumnName("refer_id")
                        .HasComment("推荐关系链ID");

                    b.Property<string>("ThirdpartId")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("thirdpart_id")
                        .HasComment("第三方平台唯一标识");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at")
                        .HasComment("更新时间");

                    b.Property<long>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by")
                        .HasComment("更新人");

                    b.Property<int>("UserCategory")
                        .HasColumnType("integer")
                        .HasColumnName("user_category")
                        .HasComment("用户类型: 1-前台用户, 2-后台用户");

                    b.Property<int>("VerifyMobileStatus")
                        .HasColumnType("integer")
                        .HasColumnName("verify_mobile_status")
                        .HasComment("手机验证状态");

                    b.Property<DateTime?>("VerifyMobileTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("verify_mobile_time")
                        .HasComment("最后一次手机验证时间");

                    b.HasKey("Id");

                    b.ToTable("sys_user", (string)null);
                });

            modelBuilder.Entity("Domain.Entity.Identity.UserAddress", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at")
                        .HasComment("创建时间");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by")
                        .HasComment("创建人");

                    b.Property<int>("DeletedStatus")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_status")
                        .HasComment("是否删除 1正常 2停用");

                    b.Property<int>("IsDefault")
                        .HasColumnType("integer")
                        .HasColumnName("is_default");

                    b.Property<string>("ReceiverCityName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("receiver_city_name");

                    b.Property<string>("ReceiverCountyName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("receiver_county_name");

                    b.Property<string>("ReceiverDetailInfo")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("receiver_detail_info");

                    b.Property<string>("ReceiverMobile")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("receiver_mobile");

                    b.Property<string>("ReceiverName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("receiver_name");

                    b.Property<string>("ReceiverPostCode")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("receiver_post_code");

                    b.Property<string>("ReceiverProvinceName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("receiver_province_name");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at")
                        .HasComment("更新时间");

                    b.Property<long>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by")
                        .HasComment("更新人");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.ToTable("sys_user_address", (string)null);
                });

            modelBuilder.Entity("Domain.Entity.Identity.UserRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at")
                        .HasComment("创建时间");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by")
                        .HasComment("创建人");

                    b.Property<int>("DeletedStatus")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_status")
                        .HasComment("是否删除 1正常 2停用");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint")
                        .HasColumnName("role_id")
                        .HasComment("关联角色ID");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at")
                        .HasComment("更新时间");

                    b.Property<long>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by")
                        .HasComment("更新人");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id")
                        .HasComment("关联用户ID");

                    b.HasKey("Id");

                    b.ToTable("sys_user_role", (string)null);
                });

            modelBuilder.Entity("Domain.Entity.MallOrderCashFlow", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("ActivityIds")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("activity_ids")
                        .HasComment("微信活动Id");

                    b.Property<string>("BankCardNo")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("bank_card_no")
                        .HasComment("支付银行信息");

                    b.Property<string>("BankInfo")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("bank_info")
                        .HasComment("银行信息");

                    b.Property<string>("BillFunds")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("bill_funds")
                        .HasComment("资金渠道");

                    b.Property<string>("BillFundsDesc")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("bill_funds_desc")
                        .HasComment("资金渠道说明");

                    b.Property<string>("BuyerCashPayAmt")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("buyer_cash_pay_amt")
                        .HasComment("实付现金金额");

                    b.Property<string>("BuyerId")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("BuyerPayAmount")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("buyer_pay_amount")
                        .HasComment("实付金额");

                    b.Property<string>("BuyerUsername")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("ConnectSys")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("connect_sys")
                        .HasComment("转接系统");

                    b.Property<string>("CouponAmount")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("coupon_amount")
                        .HasComment("优惠金额");

                    b.Property<string>("CouponMerchantContribute")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("coupon_merchant_contribute")
                        .HasComment("商户出资优惠金额");

                    b.Property<string>("CouponOtherContribute")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("coupon_other_contribute")
                        .HasComment("其他出资优惠金额");

                    b.Property<string>("CreateTime")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("create_time")
                        .HasComment("订单创建时间");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at")
                        .HasComment("创建时间");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by")
                        .HasComment("创建人");

                    b.Property<int>("DeletedStatus")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_status")
                        .HasComment("是否删除 1正常 2停用");

                    b.Property<string>("ExtOrderId")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("ext_order_id")
                        .HasComment("外部订单号");

                    b.Property<string>("GoodsTradeNo")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("goods_trade_no")
                        .HasComment("商品交易单号");

                    b.Property<string>("InstMid")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("inst_mid")
                        .HasComment("机构商户号");

                    b.Property<string>("InstalTransInfo")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("instal_trans_info")
                        .HasComment("分期付款信息域");

                    b.Property<string>("InvoiceAmount")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("invoice_amount")
                        .HasComment("开票金额");

                    b.Property<string>("MchntUuid")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("mchnt_uuid")
                        .HasComment("商户UUID");

                    b.Property<string>("MerOrderId")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("mer_order_id")
                        .HasComment("商户订单号");

                    b.Property<string>("Mid")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("mid")
                        .HasComment("商户号");

                    b.Property<DateTime>("NotifyDate")
                        .HasMaxLength(200)
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("notify_date")
                        .HasComment("实际通知回调时间");

                    b.Property<string>("OrderDesc")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("order_desc")
                        .HasComment("订单详情");

                    b.Property<string>("PayTime")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("pay_time")
                        .HasComment("支付时间");

                    b.Property<string>("ReceiptAmount")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("receipt_amount")
                        .HasComment("实收金额");

                    b.Property<string>("RefId")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("ref_id")
                        .HasComment("支付银行卡参考号");

                    b.Property<string>("RefundAmount")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("refund_amount")
                        .HasComment("退款金额");

                    b.Property<string>("RefundDesc")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("refund_desc")
                        .HasComment("退款说明");

                    b.Property<string>("RefundExtOrderId")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("refund_ext_order_id")
                        .HasComment("退货外部订单号");

                    b.Property<string>("RefundInvoiceAmount")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("refund_invoice_amount")
                        .HasComment("实退现金金额");

                    b.Property<string>("RefundOrderId")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("refund_order_id")
                        .HasComment("退货订单号");

                    b.Property<string>("RefundPayTime")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("refund_pay_time")
                        .HasComment("退货时间");

                    b.Property<string>("RefundSettleDate")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("refund_settle_date")
                        .HasComment("退货结算日期");

                    b.Property<string>("RefundTargetOrderId")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("refund_target_order_id")
                        .HasComment("退货渠道订单号");

                    b.Property<string>("SeqId")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("seq_id")
                        .HasComment("系统交易流水号");

                    b.Property<string>("SettleDate")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("settle_date")
                        .HasComment("结算日期");

                    b.Property<string>("Status")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("status")
                        .HasComment("订单状态(TRADE_SUCCESS 支付成功  TRADE_REFUND退款成功)");

                    b.Property<string>("SubBuyerId")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("sub_buyer_id")
                        .HasComment("卖家子ID");

                    b.Property<string>("SubInst")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("sub_inst")
                        .HasComment("商户所属分支机构代码");

                    b.Property<string>("TargetOrderId")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("target_order_id")
                        .HasComment("渠道订单号");

                    b.Property<string>("TargetSys")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("target_sys")
                        .HasComment("支付渠道");

                    b.Property<string>("Tid")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("tid")
                        .HasComment("终端号");

                    b.Property<string>("TotalAmount")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("total_amount")
                        .HasComment("订单金额（单位：分）");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at")
                        .HasComment("更新时间");

                    b.Property<long>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by")
                        .HasComment("更新人");

                    b.HasKey("Id");

                    b.ToTable("mall_order_cash_flow", (string)null);
                });

            modelBuilder.Entity("Domain.Entity.MallProductSkuStockHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at")
                        .HasComment("创建时间");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by")
                        .HasComment("创建人");

                    b.Property<int>("DeletedStatus")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_status")
                        .HasComment("是否删除 1正常 2停用");

                    b.Property<string>("GoodsAttrs")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("goods_attrs")
                        .HasComment("商品属性信息（JSON格式）");

                    b.Property<int>("Num")
                        .HasColumnType("integer")
                        .HasColumnName("num")
                        .HasComment("操作数量（正数为增加，负数为减少）");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("product_id")
                        .HasComment("关联商品ID");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("remark")
                        .HasComment("操作备注");

                    b.Property<long>("SkuId")
                        .HasColumnType("bigint")
                        .HasColumnName("sku_id")
                        .HasComment("关联SKU ID");

                    b.Property<string>("StockDetailType")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("stock_detail_type")
                        .HasComment("库存操作明细类型（如：采购入库、销售出库）");

                    b.Property<string>("StockNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("stock_no")
                        .HasComment("库存操作流水号");

                    b.Property<int>("StockType")
                        .HasColumnType("integer")
                        .HasColumnName("stock_type")
                        .HasComment("库存操作类型（1-入库，2-出库，3-调整）");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at")
                        .HasComment("更新时间");

                    b.Property<long>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by")
                        .HasComment("更新人");

                    b.HasKey("Id");

                    b.ToTable("mall_product_sku_stock_history", (string)null);
                });

            modelBuilder.Entity("Domain.Entity.Order.MallOrder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("AdminDiscountPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("admin_discount_price")
                        .HasComment("管理员调整金额");

                    b.Property<DateTime?>("CommentTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("comment_time")
                        .HasComment("评价时间");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at")
                        .HasComment("创建时间");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by")
                        .HasComment("创建人");

                    b.Property<int>("DeletedStatus")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_status")
                        .HasComment("是否删除 1正常 2停用");

                    b.Property<DateTime?>("DeliveryTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("delivery_time")
                        .HasComment("发货时间");

                    b.Property<string>("LogisticsCompany")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("logistics_company")
                        .HasComment("物流公司");

                    b.Property<string>("LogisticsNo")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("logistics_no")
                        .HasComment("物流单号");

                    b.Property<int>("NumberOfInstallments")
                        .HasColumnType("integer")
                        .HasColumnName("number_of_installments")
                        .HasComment("分期付款期数");

                    b.Property<string>("OrderNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("order_no")
                        .HasComment("订单编号（唯一业务标识）");

                    b.Property<string>("OutTradeNo")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("out_trade_no")
                        .HasComment("第三方支付交易号");

                    b.Property<int>("PayPrice")
                        .HasColumnType("integer")
                        .HasColumnName("pay_price")
                        .HasComment("实际支付金额");

                    b.Property<string>("PayType")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("pay_type")
                        .HasComment("支付方式");

                    b.Property<DateTime?>("PaymentTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("payment_time")
                        .HasComment("支付时间");

                    b.Property<string>("ReceiveInfo")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .HasColumnName("receive_info")
                        .HasComment("收货信息（JSON格式）");

                    b.Property<DateTime?>("ReceiveTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("receive_time")
                        .HasComment("收货时间");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("remark")
                        .HasComment("订单备注");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status")
                        .HasComment("订单状态（0待付款 1已付款待发货 2待收货 3已完成 4售后 ）");

                    b.Property<string>("ThirdOrderNo")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("third_order_no")
                        .HasComment("第三方系统订单号");

                    b.Property<int>("TotalPrice")
                        .HasColumnType("integer")
                        .HasColumnName("total_price")
                        .HasComment("订单总金额");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at")
                        .HasComment("更新时间");

                    b.Property<long>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by")
                        .HasComment("更新人");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id")
                        .HasComment("关联用户ID");

                    b.HasKey("Id");

                    b.ToTable("mall_order", (string)null);
                });

            modelBuilder.Entity("Domain.Entity.Order.MallOrderDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<int>("DeletedStatus")
                        .HasColumnType("integer");

                    b.Property<long>("MallOrderId")
                        .HasColumnType("bigint")
                        .HasColumnName("mall_order_id")
                        .HasComment("关联主订单ID");

                    b.Property<string>("OrderNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("order_no")
                        .HasComment("业务订单号（唯一标识）");

                    b.Property<string>("ProductImgs")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("product_imgs")
                        .HasComment("商品图片URL集合（分号分隔）");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("product_name")
                        .HasComment("商品名称（快照）");

                    b.Property<int>("ProductPrice")
                        .HasColumnType("int")
                        .HasColumnName("product_price")
                        .HasComment("商品单价（单位：分）");

                    b.Property<int>("ProductQuantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1)
                        .HasColumnName("product_quantity")
                        .HasComment("购买数量");

                    b.Property<string>("ProductSkuAttrs")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("product_sku_attrs")
                        .HasComment("SKU属性（JSON格式）");

                    b.Property<long>("ProductSkuId")
                        .HasColumnType("bigint")
                        .HasColumnName("product_sku_id")
                        .HasComment("商品SKU唯一标识");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status")
                        .HasComment("订单状态：0待付款 1待发货 2待收货 3已完成 4退款申请中 5退款中 6已退款 7退货申请中 8退货中 9已退货 10已评价 11已取消");

                    b.Property<string>("ThirdReturnOrderNo")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("third_return_order_no")
                        .HasComment("第三方退单号（支付系统要求）");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("MallOrderId");

                    b.ToTable("mall_order_detail", (string)null);
                });

            modelBuilder.Entity("Domain.Entity.Order.MallOrderReturn", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("ApplicationDescription")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("application_description")
                        .HasComment("问题详细描述");

                    b.Property<string>("ApplicationImgs")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .HasColumnName("application_imgs")
                        .HasComment("凭证图片（分号分隔URL集合）");

                    b.Property<string>("ApplicationReason")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("application_reason")
                        .HasComment("申请原因分类（质量问题/七天无理由等）");

                    b.Property<DateTime?>("CheckDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("check_date")
                        .HasComment("审核时间");

                    b.Property<long>("CheckUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("check_user_id")
                        .HasComment("审核人ID");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("create_date")
                        .HasComment("申请提交时间");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at")
                        .HasComment("创建时间");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by")
                        .HasComment("创建人");

                    b.Property<int>("DeletedStatus")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_status")
                        .HasComment("是否删除 1正常 2停用");

                    b.Property<long>("MallOrderDetailId")
                        .HasColumnType("bigint")
                        .HasColumnName("mall_order_detail_id")
                        .HasComment("关联订单明细ID");

                    b.Property<string>("OrderNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("order_no")
                        .HasComment("原始订单编号（唯一标识）");

                    b.Property<string>("ProductImgs")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("product_imgs")
                        .HasComment("商品图片（分号分隔URL集合）");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("product_name")
                        .HasComment("商品名称（退货时快照）");

                    b.Property<int>("ProductPrice")
                        .HasColumnType("integer")
                        .HasColumnName("product_price")
                        .HasComment("产品价格（单价：分） ");

                    b.Property<int>("ProductQuantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1)
                        .HasColumnName("product_quantity")
                        .HasComment("退货数量");

                    b.Property<string>("ProductSkuAttrs")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("product_sku_attrs")
                        .HasComment("SKU属性（JSON格式）");

                    b.Property<long>("ProductSkuId")
                        .HasColumnType("bigint")
                        .HasColumnName("product_sku_id")
                        .HasComment("商品SKU唯一标识");

                    b.Property<string>("RefMallOrderNo")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("ref_mall_order_no")
                        .HasComment("商城系统退货单号");

                    b.Property<string>("RefOrderNo")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("ref_order_no")
                        .HasComment("关联退货单号（外部系统）");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("remark")
                        .HasComment("系统操作备注");

                    b.Property<string>("ResponseResult")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("response_result")
                        .HasComment("审核结果说明");

                    b.Property<string>("ReturnLogisticsNo")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("return_logistics_no")
                        .HasComment("退货物流单号");

                    b.Property<int>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("integer")
                        .HasColumnName("status")
                        .HasComment("退货状态：APPLIED-已申请 AUDITING-审核中 COMPLETED-已完成");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at")
                        .HasComment("更新时间");

                    b.Property<long>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by")
                        .HasComment("更新人");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id")
                        .HasComment("申请人ID");

                    b.HasKey("Id");

                    b.HasIndex("MallOrderDetailId");

                    b.ToTable("mall_order_return", (string)null);
                });

            modelBuilder.Entity("Domain.Entity.Product.MallBrand", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("BrandCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("brand_code")
                        .HasComment("品牌唯一编码");

                    b.Property<string>("BrandImg")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("brand_img")
                        .HasComment("品牌展示图（完整URL）");

                    b.Property<string>("BrandLogo")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("brand_logo")
                        .HasComment("品牌Logo标识（资源路径）");

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("brand_name")
                        .HasComment("品牌名称");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at")
                        .HasComment("创建时间");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by")
                        .HasComment("创建人");

                    b.Property<int>("DeletedStatus")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_status")
                        .HasComment("是否删除 1正常 2停用");

                    b.Property<int>("SortNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("sort_no")
                        .HasComment("排序序号（数值越小越靠前）");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at")
                        .HasComment("更新时间");

                    b.Property<long>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by")
                        .HasComment("更新人");

                    b.HasKey("Id");

                    b.ToTable("mall_brand", (string)null);
                });

            modelBuilder.Entity("Domain.Entity.Product.MallProduct", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("BrandId")
                        .HasColumnType("bigint")
                        .HasColumnName("brand_id")
                        .HasComment("关联品牌ID");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at")
                        .HasComment("创建时间");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by")
                        .HasComment("创建人");

                    b.Property<int>("DeletedStatus")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_status")
                        .HasComment("是否删除 1正常 2停用");

                    b.Property<string>("Desc")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("desc")
                        .HasComment("商品卖点描述（前端展示）");

                    b.Property<long>("MallProductCategoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("mall_product_category_id")
                        .HasComment("关联商品分类ID");

                    b.Property<long>("MallProductTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("mall_product_type_id")
                        .HasComment("关联商品类型ID");

                    b.Property<short>("NewStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0)
                        .HasColumnName("new_status")
                        .HasComment("新品状态（0-非新品，1-新品）");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("product_code")
                        .HasComment("商品唯一编码（业务标识）");

                    b.Property<string>("ProductDetailImg")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("product_detail_img")
                        .HasComment("商品详情图URL（分号分隔多图）");

                    b.Property<string>("ProductMainImg")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("product_main_img")
                        .HasComment("商品主图URL（首屏展示图）");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("product_name")
                        .HasComment("商品名称（唯一标识）");

                    b.Property<string>("ProductShortName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("product_short_name")
                        .HasComment("商品简称（展示用短名称）");

                    b.Property<short>("RecommendStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0)
                        .HasColumnName("recommend_status")
                        .HasComment("推荐状态（0-未推荐，1-推荐）");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("remark")
                        .HasComment("商品备注（内部使用）");

                    b.Property<int>("SortNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("sort_no")
                        .HasComment("排序序号（数值越小越靠前）");

                    b.Property<short>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0)
                        .HasColumnName("status")
                        .HasComment("商品状态（0-下架，1-上架）");

                    b.Property<string>("UnitName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("unit_name")
                        .HasComment("商品单位（如：件、套、箱）");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at")
                        .HasComment("更新时间");

                    b.Property<long>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by")
                        .HasComment("更新人");

                    b.HasKey("Id");

                    b.ToTable("mall_product", (string)null);
                });

            modelBuilder.Entity("Domain.Entity.Product.MallProductAttr", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at")
                        .HasComment("创建时间");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by")
                        .HasComment("创建人");

                    b.Property<int>("DeletedStatus")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_status")
                        .HasComment("是否删除 1正常 2停用");

                    b.Property<long>("MallProductAttrKeyId")
                        .HasColumnType("bigint")
                        .HasColumnName("mall_product_attr_key_id")
                        .HasComment("关联属性键ID");

                    b.Property<long>("MallProductAttrValueId")
                        .HasColumnType("bigint")
                        .HasColumnName("mall_product_attr_value_id")
                        .HasComment("关联属性值ID");

                    b.Property<long>("MallProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("mall_product_id")
                        .HasComment("关联商品ID");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at")
                        .HasComment("更新时间");

                    b.Property<long>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by")
                        .HasComment("更新人");

                    b.HasKey("Id");

                    b.ToTable("mall_product_attr", (string)null);
                });

            modelBuilder.Entity("Domain.Entity.Product.MallProductAttrKey", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("AttrKeyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("attr_key_name")
                        .HasComment("属性键名称（如：颜色、尺寸）");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at")
                        .HasComment("创建时间");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by")
                        .HasComment("创建人");

                    b.Property<int>("DeletedStatus")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_status")
                        .HasComment("是否删除 1正常 2停用");

                    b.Property<long>("MallProductCategoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("mall_product_category_id")
                        .HasComment("关联商品分类ID（可为空）");

                    b.Property<long>("MallProductTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("mall_product_type_id")
                        .HasComment("关联商品类型ID");

                    b.Property<int>("SortNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("sort_no")
                        .HasComment("排序序号（数值越小越靠前）");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at")
                        .HasComment("更新时间");

                    b.Property<long>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by")
                        .HasComment("更新人");

                    b.HasKey("Id");

                    b.ToTable("mall_product_attr_key", (string)null);
                });

            modelBuilder.Entity("Domain.Entity.Product.MallProductAttrValue", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("AttrValueName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("attr_value_name")
                        .HasComment("属性值名称（如：红色、XL码）");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at")
                        .HasComment("创建时间");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by")
                        .HasComment("创建人");

                    b.Property<int>("DeletedStatus")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_status")
                        .HasComment("是否删除 1正常 2停用");

                    b.Property<long>("MallProductAttrKeyId")
                        .HasColumnType("bigint")
                        .HasColumnName("mall_product_attr_key_id")
                        .HasComment("关联属性键ID");

                    b.Property<int>("SortNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("sort_no")
                        .HasComment("排序序号（数值越小越靠前）");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at")
                        .HasComment("更新时间");

                    b.Property<long>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by")
                        .HasComment("更新人");

                    b.HasKey("Id");

                    b.ToTable("mall_product_attr_value", (string)null);
                });

            modelBuilder.Entity("Domain.Entity.Product.MallProductCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("CategoryCode")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("category_code")
                        .HasComment("分类编码");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("category_name")
                        .HasComment("分类名称");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at")
                        .HasComment("创建时间");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by")
                        .HasComment("创建人");

                    b.Property<int>("DeletedStatus")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_status")
                        .HasComment("是否删除 1正常 2停用");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("image_url")
                        .HasComment("分类展示图URL");

                    b.Property<long>("MallProductTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("mall_product_type_id")
                        .HasComment("关联商品类型ID");

                    b.Property<long>("Pid")
                        .HasColumnType("bigint")
                        .HasColumnName("pid")
                        .HasComment("父级分类ID（0表示根分类）");

                    b.Property<int>("SortNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("sort_no")
                        .HasComment("排序序号");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at")
                        .HasComment("更新时间");

                    b.Property<long>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by")
                        .HasComment("更新人");

                    b.HasKey("Id");

                    b.ToTable("mall_product_category", (string)null);
                });

            modelBuilder.Entity("Domain.Entity.Product.MallProductSku", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("AttrKeyValue")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .HasColumnName("attr_key_value")
                        .HasComment("SKU属性键值对（JSON格式）");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at")
                        .HasComment("创建时间");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by")
                        .HasComment("创建人");

                    b.Property<int>("DeletedStatus")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_status")
                        .HasComment("是否删除 1正常 2停用");

                    b.Property<int>("FreezeStock")
                        .HasColumnType("integer")
                        .HasColumnName("freeze_stock")
                        .HasComment("SKU冻结库存数量");

                    b.Property<string>("InnerNumberOfInstallments")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("inner_number_of_installments")
                        .HasComment("SKU内部支持的分期期数");

                    b.Property<long>("MallProductId")
                        .HasColumnType("bigint");

                    b.Property<string>("NumberOfInstallments")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("number_of_installments")
                        .HasComment("SKU支持的分期期数");

                    b.Property<string>("SkuCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("sku_code")
                        .HasComment("SKU唯一编码");

                    b.Property<string>("SkuImg")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("sku_img")
                        .HasComment("SKU图片URL");

                    b.Property<int>("SkuInnerPrice")
                        .HasColumnType("integer")
                        .HasColumnName("sku_inner_price")
                        .HasComment("SKU内部价格");

                    b.Property<string>("SkuName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("sku_name")
                        .HasComment("SKU名称");

                    b.Property<int>("SkuPrice")
                        .HasColumnType("integer")
                        .HasColumnName("sku_price")
                        .HasComment("SKU销售价格");

                    b.Property<int>("SkuStock")
                        .HasColumnType("integer")
                        .HasColumnName("sku_stock")
                        .HasComment("SKU库存数量");

                    b.Property<int>("SortNo")
                        .HasColumnType("integer")
                        .HasColumnName("sort_no")
                        .HasComment("排序序号（数值越小越靠前）");

                    b.Property<string>("SpecParam")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .HasColumnName("spec_param")
                        .HasComment("SKU规格参数（JSON格式）");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status")
                        .HasComment("SKU状态（0-下架，1-上架）");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at")
                        .HasComment("更新时间");

                    b.Property<long>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by")
                        .HasComment("更新人");

                    b.HasKey("Id");

                    b.ToTable("mall_product_sku", (string)null);
                });

            modelBuilder.Entity("Domain.Entity.Product.MallProductType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at")
                        .HasComment("创建时间");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by")
                        .HasComment("创建人");

                    b.Property<int>("DeletedStatus")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_status")
                        .HasComment("是否删除 1正常 2停用");

                    b.Property<int>("SortNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("sort_no")
                        .HasComment("排序序号（数值越小越靠前）");

                    b.Property<string>("TypeCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("type_code")
                        .HasComment("商品类型编码（唯一标识）");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("type_name")
                        .HasComment("商品类型名称");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at")
                        .HasComment("更新时间");

                    b.Property<long>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by")
                        .HasComment("更新人");

                    b.HasKey("Id");

                    b.ToTable("mall_product_type", (string)null);
                });

            modelBuilder.Entity("Domain.Entity.Order.MallOrderDetail", b =>
                {
                    b.HasOne("Domain.Entity.Order.MallOrder", null)
                        .WithMany("MallOrderDetails")
                        .HasForeignKey("MallOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entity.Order.MallOrderReturn", b =>
                {
                    b.HasOne("Domain.Entity.Order.MallOrderDetail", "MallOrderDetail")
                        .WithMany()
                        .HasForeignKey("MallOrderDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MallOrderDetail");
                });

            modelBuilder.Entity("Domain.Entity.Order.MallOrder", b =>
                {
                    b.Navigation("MallOrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
