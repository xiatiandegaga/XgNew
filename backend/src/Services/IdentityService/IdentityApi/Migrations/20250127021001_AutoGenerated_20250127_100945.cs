using System;
using Microsoft.EntityFrameworkCore.Migrations;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace IdentityApi.Migrations
{
    /// <inheritdoc />
    public partial class AutoGenerated_20250127_100945 : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "dic_global_data",
                columns: table => new
                {
                    id = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    code = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: false, comment: "编码"),
                    name = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: false, comment: "名称"),
                    sort_no = table.Column<int>(type: "integer", nullable: false, defaultValue: 0, comment: "排序序号（数值越小越靠前）"),
                    deleted_status = table.Column<int>(type: "integer", nullable: false, comment: "是否删除 1正常 2停用"),
                    created_at = table.Column<DateTime>(type: "timestamp without time zone", nullable: false, comment: "创建时间"),
                    created_by = table.Column<long>(type: "bigint", nullable: false, comment: "创建人"),
                    updated_at = table.Column<DateTime>(type: "timestamp without time zone", nullable: false, comment: "更新时间"),
                    updated_by = table.Column<long>(type: "bigint", nullable: false, comment: "更新人")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_dic_global_data", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "dic_global_data_detail",
                columns: table => new
                {
                    id = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    code = table.Column<string>(type: "character varying(50)", maxLength: 50, nullable: false, comment: "字典明细编码"),
                    name = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: false, comment: "显示名称"),
                    remark = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "附加描述信息"),
                    const_key = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: false, comment: "字典关键字"),
                    sort_no = table.Column<int>(type: "integer", nullable: false, defaultValue: 0, comment: "排序序号（数值越小越靠前）"),
                    deleted_status = table.Column<int>(type: "integer", nullable: false, comment: "是否删除 1正常 2停用"),
                    created_at = table.Column<DateTime>(type: "timestamp without time zone", nullable: false, comment: "创建时间"),
                    created_by = table.Column<long>(type: "bigint", nullable: false, comment: "创建人"),
                    updated_at = table.Column<DateTime>(type: "timestamp without time zone", nullable: false, comment: "更新时间"),
                    updated_by = table.Column<long>(type: "bigint", nullable: false, comment: "更新人")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_dic_global_data_detail", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "dic_img_rule",
                columns: table => new
                {
                    id = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    img_rule_code = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: false, comment: "图片规则编码"),
                    img_rule_name = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: false, comment: "规则显示名称（示例：商品主图规则）"),
                    remark = table.Column<string>(type: "character varying(500)", maxLength: 500, nullable: true, comment: "规则详细描述"),
                    sort_no = table.Column<int>(type: "integer", nullable: false, defaultValue: 0, comment: "排序序号（数值越小越靠前）"),
                    deleted_status = table.Column<int>(type: "integer", nullable: false, comment: "是否删除 1正常 2停用"),
                    created_at = table.Column<DateTime>(type: "timestamp without time zone", nullable: false, comment: "创建时间"),
                    created_by = table.Column<long>(type: "bigint", nullable: false, comment: "创建人"),
                    updated_at = table.Column<DateTime>(type: "timestamp without time zone", nullable: false, comment: "更新时间"),
                    updated_by = table.Column<long>(type: "bigint", nullable: false, comment: "更新人")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_dic_img_rule", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "dic_img_rule_detail",
                columns: table => new
                {
                    id = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    img_rule_detail_code = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: false, comment: "明细唯一编码"),
                    img_rule_detail_name = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: false, comment: "明细显示名称"),
                    Remark = table.Column<string>(type: "text", nullable: true),
                    sort_no = table.Column<int>(type: "integer", nullable: false, defaultValue: 0, comment: "排序序号（数值越小越靠前）"),
                    img_rule_id = table.Column<long>(type: "bigint", nullable: false, comment: "关联规则主表ID"),
                    main_img = table.Column<string>(type: "character varying(1000)", maxLength: 1000, nullable: true, comment: "主图URL"),
                    detail_image = table.Column<string>(type: "character varying(1000)", maxLength: 1000, nullable: true, comment: "详情图URL集合"),
                    link_type = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "链接类型"),
                    link_key = table.Column<string>(type: "character varying(300)", maxLength: 300, nullable: true, comment: "链接关联键"),
                    link_address = table.Column<string>(type: "character varying(1000)", maxLength: 1000, nullable: true, comment: "直接跳转URL"),
                    start_time = table.Column<DateTime>(type: "timestamp without time zone", nullable: false, comment: "规则生效时间"),
                    end_time = table.Column<DateTime>(type: "timestamp without time zone", nullable: false, comment: "规则失效时间"),
                    deleted_status = table.Column<int>(type: "integer", nullable: false, comment: "是否删除 1正常 2停用"),
                    created_at = table.Column<DateTime>(type: "timestamp without time zone", nullable: false, comment: "创建时间"),
                    created_by = table.Column<long>(type: "bigint", nullable: false, comment: "创建人"),
                    updated_at = table.Column<DateTime>(type: "timestamp without time zone", nullable: false, comment: "更新时间"),
                    updated_by = table.Column<long>(type: "bigint", nullable: false, comment: "更新人")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_dic_img_rule_detail", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "mall_brand",
                columns: table => new
                {
                    id = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    brand_name = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: false, comment: "品牌名称"),
                    sort_no = table.Column<int>(type: "integer", nullable: false, defaultValue: 0, comment: "排序序号（数值越小越靠前）"),
                    brand_code = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: false, comment: "品牌唯一编码"),
                    brand_img = table.Column<string>(type: "character varying(500)", maxLength: 500, nullable: true, comment: "品牌展示图（完整URL）"),
                    brand_logo = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: true, comment: "品牌Logo标识（资源路径）"),
                    deleted_status = table.Column<int>(type: "integer", nullable: false, comment: "是否删除 1正常 2停用"),
                    created_at = table.Column<DateTime>(type: "timestamp without time zone", nullable: false, comment: "创建时间"),
                    created_by = table.Column<long>(type: "bigint", nullable: false, comment: "创建人"),
                    updated_at = table.Column<DateTime>(type: "timestamp without time zone", nullable: false, comment: "更新时间"),
                    updated_by = table.Column<long>(type: "bigint", nullable: false, comment: "更新人")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_mall_brand", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "mall_order",
                columns: table => new
                {
                    id = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    order_no = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: false, comment: "订单编号（唯一业务标识）"),
                    user_id = table.Column<long>(type: "bigint", nullable: false, comment: "关联用户ID"),
                    status = table.Column<int>(type: "integer", nullable: false, comment: "订单状态（0待付款 1已付款待发货 2待收货 3已完成 4售后 ）"),
                    total_price = table.Column<int>(type: "integer", nullable: false, comment: "订单总金额"),
                    pay_price = table.Column<int>(type: "integer", nullable: false, comment: "实际支付金额"),
                    admin_discount_price = table.Column<int>(type: "integer", nullable: false, defaultValue: 0, comment: "管理员调整金额"),
                    pay_type = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: true, comment: "支付方式"),
                    logistics_company = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: true, comment: "物流公司"),
                    logistics_no = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: true, comment: "物流单号"),
                    out_trade_no = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: true, comment: "第三方支付交易号"),
                    receive_info = table.Column<string>(type: "character varying(2000)", maxLength: 2000, nullable: true, comment: "收货信息（JSON格式）"),
                    remark = table.Column<string>(type: "character varying(500)", maxLength: 500, nullable: true, comment: "订单备注"),
                    payment_time = table.Column<DateTime>(type: "timestamp without time zone", nullable: true, comment: "支付时间"),
                    delivery_time = table.Column<DateTime>(type: "timestamp without time zone", nullable: true, comment: "发货时间"),
                    receive_time = table.Column<DateTime>(type: "timestamp without time zone", nullable: true, comment: "收货时间"),
                    comment_time = table.Column<DateTime>(type: "timestamp without time zone", nullable: true, comment: "评价时间"),
                    number_of_installments = table.Column<int>(type: "integer", nullable: false, comment: "分期付款期数"),
                    third_order_no = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: true, comment: "第三方系统订单号"),
                    deleted_status = table.Column<int>(type: "integer", nullable: false, comment: "是否删除 1正常 2停用"),
                    created_at = table.Column<DateTime>(type: "timestamp without time zone", nullable: false, comment: "创建时间"),
                    created_by = table.Column<long>(type: "bigint", nullable: false, comment: "创建人"),
                    updated_at = table.Column<DateTime>(type: "timestamp without time zone", nullable: false, comment: "更新时间"),
                    updated_by = table.Column<long>(type: "bigint", nullable: false, comment: "更新人")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_mall_order", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "mall_order_cash_flow",
                columns: table => new
                {
                    id = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    mid = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "商户号"),
                    tid = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "终端号"),
                    inst_mid = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "机构商户号"),
                    bank_card_no = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "支付银行信息"),
                    bank_info = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "银行信息"),
                    bill_funds = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "资金渠道"),
                    bill_funds_desc = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "资金渠道说明"),
                    BuyerId = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true),
                    BuyerUsername = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true),
                    buyer_pay_amount = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "实付金额"),
                    buyer_cash_pay_amt = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "实付现金金额"),
                    coupon_amount = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "优惠金额"),
                    total_amount = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "订单金额（单位：分）"),
                    invoice_amount = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "开票金额"),
                    mer_order_id = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "商户订单号"),
                    pay_time = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "支付时间"),
                    receipt_amount = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "实收金额"),
                    ref_id = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "支付银行卡参考号"),
                    refund_amount = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "退款金额"),
                    refund_desc = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "退款说明"),
                    seq_id = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "系统交易流水号"),
                    settle_date = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "结算日期"),
                    status = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "订单状态(TRADE_SUCCESS 支付成功  TRADE_REFUND退款成功)"),
                    sub_buyer_id = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "卖家子ID"),
                    target_order_id = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "渠道订单号"),
                    target_sys = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "支付渠道"),
                    coupon_merchant_contribute = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "商户出资优惠金额"),
                    coupon_other_contribute = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "其他出资优惠金额"),
                    activity_ids = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "微信活动Id"),
                    refund_target_order_id = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "退货渠道订单号"),
                    refund_pay_time = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "退货时间"),
                    refund_settle_date = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "退货结算日期"),
                    order_desc = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "订单详情"),
                    create_time = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "订单创建时间"),
                    mchnt_uuid = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "商户UUID"),
                    connect_sys = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "转接系统"),
                    sub_inst = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "商户所属分支机构代码"),
                    refund_ext_order_id = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "退货外部订单号"),
                    goods_trade_no = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "商品交易单号"),
                    ext_order_id = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "外部订单号"),
                    refund_order_id = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "退货订单号"),
                    refund_invoice_amount = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "实退现金金额"),
                    instal_trans_info = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "分期付款信息域"),
                    notify_date = table.Column<DateTime>(type: "timestamp without time zone", maxLength: 200, nullable: false, comment: "实际通知回调时间"),
                    deleted_status = table.Column<int>(type: "integer", nullable: false, comment: "是否删除 1正常 2停用"),
                    created_at = table.Column<DateTime>(type: "timestamp without time zone", nullable: false, comment: "创建时间"),
                    created_by = table.Column<long>(type: "bigint", nullable: false, comment: "创建人"),
                    updated_at = table.Column<DateTime>(type: "timestamp without time zone", nullable: false, comment: "更新时间"),
                    updated_by = table.Column<long>(type: "bigint", nullable: false, comment: "更新人")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_mall_order_cash_flow", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "mall_product",
                columns: table => new
                {
                    id = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    product_name = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: false, comment: "商品名称（唯一标识）"),
                    sort_no = table.Column<int>(type: "integer", nullable: false, defaultValue: 0, comment: "排序序号（数值越小越靠前）"),
                    product_code = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: false, comment: "商品唯一编码（业务标识）"),
                    product_short_name = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: true, comment: "商品简称（展示用短名称）"),
                    brand_id = table.Column<long>(type: "bigint", nullable: false, comment: "关联品牌ID"),
                    mall_product_category_id = table.Column<long>(type: "bigint", nullable: false, comment: "关联商品分类ID"),
                    mall_product_type_id = table.Column<long>(type: "bigint", nullable: false, comment: "关联商品类型ID"),
                    product_main_img = table.Column<string>(type: "character varying(1000)", maxLength: 1000, nullable: true, comment: "商品主图URL（首屏展示图）"),
                    product_detail_img = table.Column<string>(type: "character varying(1000)", maxLength: 1000, nullable: true, comment: "商品详情图URL（分号分隔多图）"),
                    recommend_status = table.Column<short>(type: "smallint", nullable: false, defaultValue: (short)0, comment: "推荐状态（0-未推荐，1-推荐）"),
                    unit_name = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: true, comment: "商品单位（如：件、套、箱）"),
                    status = table.Column<short>(type: "smallint", nullable: false, defaultValue: (short)0, comment: "商品状态（0-下架，1-上架）"),
                    new_status = table.Column<short>(type: "smallint", nullable: false, defaultValue: (short)0, comment: "新品状态（0-非新品，1-新品）"),
                    remark = table.Column<string>(type: "character varying(500)", maxLength: 500, nullable: true, comment: "商品备注（内部使用）"),
                    desc = table.Column<string>(type: "character varying(500)", maxLength: 500, nullable: true, comment: "商品卖点描述（前端展示）"),
                    deleted_status = table.Column<int>(type: "integer", nullable: false, comment: "是否删除 1正常 2停用"),
                    created_at = table.Column<DateTime>(type: "timestamp without time zone", nullable: false, comment: "创建时间"),
                    created_by = table.Column<long>(type: "bigint", nullable: false, comment: "创建人"),
                    updated_at = table.Column<DateTime>(type: "timestamp without time zone", nullable: false, comment: "更新时间"),
                    updated_by = table.Column<long>(type: "bigint", nullable: false, comment: "更新人")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_mall_product", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "mall_product_attr",
                columns: table => new
                {
                    id = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    mall_product_id = table.Column<long>(type: "bigint", nullable: false, comment: "关联商品ID"),
                    mall_product_attr_key_id = table.Column<long>(type: "bigint", nullable: false, comment: "关联属性键ID"),
                    mall_product_attr_value_id = table.Column<long>(type: "bigint", nullable: false, comment: "关联属性值ID"),
                    deleted_status = table.Column<int>(type: "integer", nullable: false, comment: "是否删除 1正常 2停用"),
                    created_at = table.Column<DateTime>(type: "timestamp without time zone", nullable: false, comment: "创建时间"),
                    created_by = table.Column<long>(type: "bigint", nullable: false, comment: "创建人"),
                    updated_at = table.Column<DateTime>(type: "timestamp without time zone", nullable: false, comment: "更新时间"),
                    updated_by = table.Column<long>(type: "bigint", nullable: false, comment: "更新人")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_mall_product_attr", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "mall_product_attr_key",
                columns: table => new
                {
                    id = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    attr_key_name = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: false, comment: "属性键名称（如：颜色、尺寸）"),
                    mall_product_type_id = table.Column<long>(type: "bigint", nullable: false, comment: "关联商品类型ID"),
                    mall_product_category_id = table.Column<long>(type: "bigint", nullable: false, comment: "关联商品分类ID（可为空）"),
                    sort_no = table.Column<int>(type: "integer", nullable: false, defaultValue: 0, comment: "排序序号（数值越小越靠前）"),
                    deleted_status = table.Column<int>(type: "integer", nullable: false, comment: "是否删除 1正常 2停用"),
                    created_at = table.Column<DateTime>(type: "timestamp without time zone", nullable: false, comment: "创建时间"),
                    created_by = table.Column<long>(type: "bigint", nullable: false, comment: "创建人"),
                    updated_at = table.Column<DateTime>(type: "timestamp without time zone", nullable: false, comment: "更新时间"),
                    updated_by = table.Column<long>(type: "bigint", nullable: false, comment: "更新人")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_mall_product_attr_key", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "mall_product_attr_value",
                columns: table => new
                {
                    id = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    attr_value_name = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: false, comment: "属性值名称（如：红色、XL码）"),
                    mall_product_attr_key_id = table.Column<long>(type: "bigint", nullable: false, comment: "关联属性键ID"),
                    sort_no = table.Column<int>(type: "integer", nullable: false, defaultValue: 0, comment: "排序序号（数值越小越靠前）"),
                    deleted_status = table.Column<int>(type: "integer", nullable: false, comment: "是否删除 1正常 2停用"),
                    created_at = table.Column<DateTime>(type: "timestamp without time zone", nullable: false, comment: "创建时间"),
                    created_by = table.Column<long>(type: "bigint", nullable: false, comment: "创建人"),
                    updated_at = table.Column<DateTime>(type: "timestamp without time zone", nullable: false, comment: "更新时间"),
                    updated_by = table.Column<long>(type: "bigint", nullable: false, comment: "更新人")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_mall_product_attr_value", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "mall_product_category",
                columns: table => new
                {
                    id = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    category_name = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: false, comment: "分类名称"),
                    pid = table.Column<long>(type: "bigint", nullable: false, comment: "父级分类ID（0表示根分类）"),
                    sort_no = table.Column<int>(type: "integer", nullable: false, defaultValue: 0, comment: "排序序号"),
                    image_url = table.Column<string>(type: "character varying(1000)", maxLength: 1000, nullable: true, comment: "分类展示图URL"),
                    category_code = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: true, comment: "分类编码"),
                    mall_product_type_id = table.Column<long>(type: "bigint", nullable: false, comment: "关联商品类型ID"),
                    deleted_status = table.Column<int>(type: "integer", nullable: false, comment: "是否删除 1正常 2停用"),
                    created_at = table.Column<DateTime>(type: "timestamp without time zone", nullable: false, comment: "创建时间"),
                    created_by = table.Column<long>(type: "bigint", nullable: false, comment: "创建人"),
                    updated_at = table.Column<DateTime>(type: "timestamp without time zone", nullable: false, comment: "更新时间"),
                    updated_by = table.Column<long>(type: "bigint", nullable: false, comment: "更新人")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_mall_product_category", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "mall_product_sku",
                columns: table => new
                {
                    id = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    sku_name = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: true, comment: "SKU名称"),
                    sort_no = table.Column<int>(type: "integer", nullable: false, comment: "排序序号（数值越小越靠前）"),
                    sku_code = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: false, comment: "SKU唯一编码"),
                    MallProductId = table.Column<long>(type: "bigint", nullable: false),
                    sku_price = table.Column<int>(type: "integer", nullable: false, comment: "SKU销售价格"),
                    sku_inner_price = table.Column<int>(type: "integer", nullable: false, comment: "SKU内部价格"),
                    sku_img = table.Column<string>(type: "character varying(1000)", maxLength: 1000, nullable: true, comment: "SKU图片URL"),
                    sku_stock = table.Column<int>(type: "integer", nullable: false, comment: "SKU库存数量"),
                    freeze_stock = table.Column<int>(type: "integer", nullable: false, comment: "SKU冻结库存数量"),
                    attr_key_value = table.Column<string>(type: "character varying(2000)", maxLength: 2000, nullable: true, comment: "SKU属性键值对（JSON格式）"),
                    spec_param = table.Column<string>(type: "character varying(2000)", maxLength: 2000, nullable: true, comment: "SKU规格参数（JSON格式）"),
                    status = table.Column<int>(type: "integer", nullable: false, comment: "SKU状态（0-下架，1-上架）"),
                    number_of_installments = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: true, comment: "SKU支持的分期期数"),
                    inner_number_of_installments = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: true, comment: "SKU内部支持的分期期数"),
                    deleted_status = table.Column<int>(type: "integer", nullable: false, comment: "是否删除 1正常 2停用"),
                    created_at = table.Column<DateTime>(type: "timestamp without time zone", nullable: false, comment: "创建时间"),
                    created_by = table.Column<long>(type: "bigint", nullable: false, comment: "创建人"),
                    updated_at = table.Column<DateTime>(type: "timestamp without time zone", nullable: false, comment: "更新时间"),
                    updated_by = table.Column<long>(type: "bigint", nullable: false, comment: "更新人")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_mall_product_sku", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "mall_product_sku_stock_history",
                columns: table => new
                {
                    id = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    stock_no = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: false, comment: "库存操作流水号"),
                    product_id = table.Column<long>(type: "bigint", nullable: false, comment: "关联商品ID"),
                    sku_id = table.Column<long>(type: "bigint", nullable: false, comment: "关联SKU ID"),
                    num = table.Column<int>(type: "integer", nullable: false, comment: "操作数量（正数为增加，负数为减少）"),
                    remark = table.Column<string>(type: "character varying(500)", maxLength: 500, nullable: true, comment: "操作备注"),
                    stock_type = table.Column<int>(type: "integer", nullable: false, comment: "库存操作类型（1-入库，2-出库，3-调整）"),
                    goods_attrs = table.Column<string>(type: "character varying(1000)", maxLength: 1000, nullable: true, comment: "商品属性信息（JSON格式）"),
                    stock_detail_type = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "库存操作明细类型（如：采购入库、销售出库）"),
                    deleted_status = table.Column<int>(type: "integer", nullable: false, comment: "是否删除 1正常 2停用"),
                    created_at = table.Column<DateTime>(type: "timestamp without time zone", nullable: false, comment: "创建时间"),
                    created_by = table.Column<long>(type: "bigint", nullable: false, comment: "创建人"),
                    updated_at = table.Column<DateTime>(type: "timestamp without time zone", nullable: false, comment: "更新时间"),
                    updated_by = table.Column<long>(type: "bigint", nullable: false, comment: "更新人")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_mall_product_sku_stock_history", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "mall_product_type",
                columns: table => new
                {
                    id = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    type_name = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: false, comment: "商品类型名称"),
                    sort_no = table.Column<int>(type: "integer", nullable: false, defaultValue: 0, comment: "排序序号（数值越小越靠前）"),
                    type_code = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: false, comment: "商品类型编码（唯一标识）"),
                    deleted_status = table.Column<int>(type: "integer", nullable: false, comment: "是否删除 1正常 2停用"),
                    created_at = table.Column<DateTime>(type: "timestamp without time zone", nullable: false, comment: "创建时间"),
                    created_by = table.Column<long>(type: "bigint", nullable: false, comment: "创建人"),
                    updated_at = table.Column<DateTime>(type: "timestamp without time zone", nullable: false, comment: "更新时间"),
                    updated_by = table.Column<long>(type: "bigint", nullable: false, comment: "更新人")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_mall_product_type", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "sys_menu",
                columns: table => new
                {
                    id = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    name = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: true, comment: "路由唯一标识名称"),
                    category = table.Column<int>(type: "integer", nullable: false, comment: "菜单类型: 1-目录, 2-菜单, 3-按钮"),
                    meta_title = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: true, comment: "菜单显示标题"),
                    meta_icon = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: true, comment: "菜单图标类名或URL"),
                    p_id = table.Column<long>(type: "bigint", nullable: false, comment: "父级菜单ID"),
                    path = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "路由访问路径 (如: /system/user)"),
                    component = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "前端组件路径 (如: /system/user/index)"),
                    permission = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: true, comment: "接口权限标识 (如: system:user:list)"),
                    redirect = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "路由重定向路径"),
                    sort_no = table.Column<int>(type: "integer", nullable: false, defaultValue: 0, comment: "同级菜单排序序号"),
                    deleted_status = table.Column<int>(type: "integer", nullable: false, comment: "是否删除 1正常 2停用"),
                    created_at = table.Column<DateTime>(type: "timestamp without time zone", nullable: false, comment: "创建时间"),
                    created_by = table.Column<long>(type: "bigint", nullable: false, comment: "创建人"),
                    updated_at = table.Column<DateTime>(type: "timestamp without time zone", nullable: false, comment: "更新时间"),
                    updated_by = table.Column<long>(type: "bigint", nullable: false, comment: "更新人")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_sys_menu", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "sys_role",
                columns: table => new
                {
                    id = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    name = table.Column<string>(type: "character varying(50)", maxLength: 50, nullable: false, comment: "角色名称（如：系统管理员）"),
                    description = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "角色职责描述"),
                    CreateTime = table.Column<DateTime>(type: "timestamp without time zone", nullable: false),
                    UpdateTime = table.Column<DateTime>(type: "timestamp without time zone", nullable: false),
                    CreateUserId = table.Column<long>(type: "bigint", nullable: false),
                    UpdateUserId = table.Column<long>(type: "bigint", nullable: false),
                    level = table.Column<int>(type: "integer", nullable: false, comment: "角色等级：1-超级管理员, 2-普通管理员, 3-操作员"),
                    sort_no = table.Column<int>(type: "integer", nullable: false, defaultValue: 0, comment: "同级角色排序序号"),
                    deleted_status = table.Column<int>(type: "integer", nullable: false, comment: "是否删除 1正常 2停用"),
                    created_at = table.Column<DateTime>(type: "timestamp without time zone", nullable: false, comment: "创建时间"),
                    created_by = table.Column<long>(type: "bigint", nullable: false, comment: "创建人"),
                    updated_at = table.Column<DateTime>(type: "timestamp without time zone", nullable: false, comment: "更新时间"),
                    updated_by = table.Column<long>(type: "bigint", nullable: false, comment: "更新人")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_sys_role", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "sys_role_menu",
                columns: table => new
                {
                    id = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    menu_id = table.Column<long>(type: "bigint", nullable: false, comment: "关联菜单ID"),
                    role_id = table.Column<long>(type: "bigint", nullable: false, comment: "关联角色ID"),
                    deleted_status = table.Column<int>(type: "integer", nullable: false, comment: "是否删除 1正常 2停用"),
                    created_at = table.Column<DateTime>(type: "timestamp without time zone", nullable: false, comment: "创建时间"),
                    created_by = table.Column<long>(type: "bigint", nullable: false, comment: "创建人"),
                    updated_at = table.Column<DateTime>(type: "timestamp without time zone", nullable: false, comment: "更新时间"),
                    updated_by = table.Column<long>(type: "bigint", nullable: false, comment: "更新人")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_sys_role_menu", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "sys_user",
                columns: table => new
                {
                    id = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    account = table.Column<string>(type: "character varying(50)", maxLength: 50, nullable: false, comment: "登录账号"),
                    password = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: false, comment: "加密后的密码"),
                    real_name = table.Column<string>(type: "character varying(50)", maxLength: 50, nullable: true, comment: "用户真实姓名"),
                    nick_name = table.Column<string>(type: "character varying(50)", maxLength: 50, nullable: true, comment: "用户显示昵称"),
                    mobile = table.Column<string>(type: "character varying(50)", maxLength: 50, nullable: true, comment: "用户手机号"),
                    img = table.Column<string>(type: "character varying(500)", maxLength: 500, nullable: true, comment: "头像URL地址"),
                    member_point = table.Column<int>(type: "integer", nullable: false, comment: "会员积分"),
                    verify_mobile_status = table.Column<int>(type: "integer", nullable: false, comment: "手机验证状态"),
                    verify_mobile_time = table.Column<DateTime>(type: "timestamp without time zone", nullable: true, comment: "最后一次手机验证时间"),
                    pid = table.Column<long>(type: "bigint", nullable: false, comment: "直接上级用户ID"),
                    refer_id = table.Column<long>(type: "bigint", nullable: false, comment: "推荐关系链ID"),
                    thirdpart_id = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "第三方平台唯一标识"),
                    user_category = table.Column<int>(type: "integer", nullable: false, comment: "用户类型: 1-前台用户, 2-后台用户"),
                    is_system = table.Column<int>(type: "integer", nullable: false, comment: "是否系统管理员"),
                    deleted_status = table.Column<int>(type: "integer", nullable: false, comment: "是否删除 1正常 2停用"),
                    created_at = table.Column<DateTime>(type: "timestamp without time zone", nullable: false, comment: "创建时间"),
                    created_by = table.Column<long>(type: "bigint", nullable: false, comment: "创建人"),
                    updated_at = table.Column<DateTime>(type: "timestamp without time zone", nullable: false, comment: "更新时间"),
                    updated_by = table.Column<long>(type: "bigint", nullable: false, comment: "更新人")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_sys_user", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "sys_user_address",
                columns: table => new
                {
                    id = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    user_id = table.Column<long>(type: "bigint", nullable: false),
                    receiver_province_name = table.Column<string>(type: "character varying(50)", maxLength: 50, nullable: true),
                    receiver_city_name = table.Column<string>(type: "character varying(50)", maxLength: 50, nullable: true),
                    receiver_county_name = table.Column<string>(type: "character varying(50)", maxLength: 50, nullable: true),
                    receiver_detail_info = table.Column<string>(type: "character varying(500)", maxLength: 500, nullable: true),
                    receiver_post_code = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true),
                    receiver_mobile = table.Column<string>(type: "character varying(50)", maxLength: 50, nullable: true),
                    receiver_name = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: true),
                    is_default = table.Column<int>(type: "integer", nullable: false),
                    deleted_status = table.Column<int>(type: "integer", nullable: false, comment: "是否删除 1正常 2停用"),
                    created_at = table.Column<DateTime>(type: "timestamp without time zone", nullable: false, comment: "创建时间"),
                    created_by = table.Column<long>(type: "bigint", nullable: false, comment: "创建人"),
                    updated_at = table.Column<DateTime>(type: "timestamp without time zone", nullable: false, comment: "更新时间"),
                    updated_by = table.Column<long>(type: "bigint", nullable: false, comment: "更新人")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_sys_user_address", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "sys_user_role",
                columns: table => new
                {
                    id = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    user_id = table.Column<long>(type: "bigint", nullable: false, comment: "关联用户ID"),
                    role_id = table.Column<long>(type: "bigint", nullable: false, comment: "关联角色ID"),
                    deleted_status = table.Column<int>(type: "integer", nullable: false, comment: "是否删除 1正常 2停用"),
                    created_at = table.Column<DateTime>(type: "timestamp without time zone", nullable: false, comment: "创建时间"),
                    created_by = table.Column<long>(type: "bigint", nullable: false, comment: "创建人"),
                    updated_at = table.Column<DateTime>(type: "timestamp without time zone", nullable: false, comment: "更新时间"),
                    updated_by = table.Column<long>(type: "bigint", nullable: false, comment: "更新人")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_sys_user_role", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "mall_order_detail",
                columns: table => new
                {
                    Id = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    order_no = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: false, comment: "业务订单号（唯一标识）"),
                    product_sku_id = table.Column<long>(type: "bigint", nullable: false, comment: "商品SKU唯一标识"),
                    product_name = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: false, comment: "商品名称（快照）"),
                    product_quantity = table.Column<int>(type: "integer", nullable: false, defaultValue: 1, comment: "购买数量"),
                    product_price = table.Column<int>(type: "int", nullable: false, comment: "商品单价（单位：分）"),
                    product_sku_attrs = table.Column<string>(type: "character varying(1000)", maxLength: 1000, nullable: true, comment: "SKU属性（JSON格式）"),
                    product_imgs = table.Column<string>(type: "character varying(1000)", maxLength: 1000, nullable: true, comment: "商品图片URL集合（分号分隔）"),
                    mall_order_id = table.Column<long>(type: "bigint", nullable: false, comment: "关联主订单ID"),
                    status = table.Column<int>(type: "integer", nullable: false, comment: "订单状态：0待付款 1待发货 2待收货 3已完成 4退款申请中 5退款中 6已退款 7退货申请中 8退货中 9已退货 10已评价 11已取消"),
                    third_return_order_no = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: true, comment: "第三方退单号（支付系统要求）"),
                    DeletedStatus = table.Column<int>(type: "integer", nullable: false),
                    CreatedAt = table.Column<DateTime>(type: "timestamp without time zone", nullable: false),
                    CreatedBy = table.Column<long>(type: "bigint", nullable: false),
                    UpdatedAt = table.Column<DateTime>(type: "timestamp without time zone", nullable: false),
                    UpdatedBy = table.Column<long>(type: "bigint", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_mall_order_detail", x => x.Id);
                    table.ForeignKey(
                        name: "FK_mall_order_detail_mall_order_mall_order_id",
                        column: x => x.mall_order_id,
                        principalTable: "mall_order",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "mall_order_return",
                columns: table => new
                {
                    id = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    order_no = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: false, comment: "原始订单编号（唯一标识）"),
                    ref_order_no = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: true, comment: "关联退货单号（外部系统）"),
                    ref_mall_order_no = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: true, comment: "商城系统退货单号"),
                    create_date = table.Column<DateTime>(type: "timestamp without time zone", nullable: false, comment: "申请提交时间"),
                    user_id = table.Column<long>(type: "bigint", nullable: false, comment: "申请人ID"),
                    status = table.Column<int>(type: "integer", maxLength: 20, nullable: false, comment: "退货状态：APPLIED-已申请 AUDITING-审核中 COMPLETED-已完成"),
                    product_sku_id = table.Column<long>(type: "bigint", nullable: false, comment: "商品SKU唯一标识"),
                    product_name = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: false, comment: "商品名称（退货时快照）"),
                    product_quantity = table.Column<int>(type: "integer", nullable: false, defaultValue: 1, comment: "退货数量"),
                    product_price = table.Column<int>(type: "integer", nullable: false, comment: "产品价格（单价：分） "),
                    product_sku_attrs = table.Column<string>(type: "character varying(1000)", maxLength: 1000, nullable: true, comment: "SKU属性（JSON格式）"),
                    product_imgs = table.Column<string>(type: "character varying(1000)", maxLength: 1000, nullable: true, comment: "商品图片（分号分隔URL集合）"),
                    mall_order_detail_id = table.Column<long>(type: "bigint", nullable: false, comment: "关联订单明细ID"),
                    check_user_id = table.Column<long>(type: "bigint", nullable: false, comment: "审核人ID"),
                    check_date = table.Column<DateTime>(type: "timestamp without time zone", nullable: true, comment: "审核时间"),
                    response_result = table.Column<string>(type: "character varying(500)", maxLength: 500, nullable: true, comment: "审核结果说明"),
                    remark = table.Column<string>(type: "character varying(500)", maxLength: 500, nullable: true, comment: "系统操作备注"),
                    application_reason = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: true, comment: "申请原因分类（质量问题/七天无理由等）"),
                    application_description = table.Column<string>(type: "character varying(500)", maxLength: 500, nullable: true, comment: "问题详细描述"),
                    application_imgs = table.Column<string>(type: "character varying(2000)", maxLength: 2000, nullable: true, comment: "凭证图片（分号分隔URL集合）"),
                    return_logistics_no = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: true, comment: "退货物流单号"),
                    deleted_status = table.Column<int>(type: "integer", nullable: false, comment: "是否删除 1正常 2停用"),
                    created_at = table.Column<DateTime>(type: "timestamp without time zone", nullable: false, comment: "创建时间"),
                    created_by = table.Column<long>(type: "bigint", nullable: false, comment: "创建人"),
                    updated_at = table.Column<DateTime>(type: "timestamp without time zone", nullable: false, comment: "更新时间"),
                    updated_by = table.Column<long>(type: "bigint", nullable: false, comment: "更新人")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_mall_order_return", x => x.id);
                    table.ForeignKey(
                        name: "FK_mall_order_return_mall_order_detail_mall_order_detail_id",
                        column: x => x.mall_order_detail_id,
                        principalTable: "mall_order_detail",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateIndex(
                name: "IX_mall_order_detail_mall_order_id",
                table: "mall_order_detail",
                column: "mall_order_id");

            migrationBuilder.CreateIndex(
                name: "IX_mall_order_return_mall_order_detail_id",
                table: "mall_order_return",
                column: "mall_order_detail_id");
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "dic_global_data");

            migrationBuilder.DropTable(
                name: "dic_global_data_detail");

            migrationBuilder.DropTable(
                name: "dic_img_rule");

            migrationBuilder.DropTable(
                name: "dic_img_rule_detail");

            migrationBuilder.DropTable(
                name: "mall_brand");

            migrationBuilder.DropTable(
                name: "mall_order_cash_flow");

            migrationBuilder.DropTable(
                name: "mall_order_return");

            migrationBuilder.DropTable(
                name: "mall_product");

            migrationBuilder.DropTable(
                name: "mall_product_attr");

            migrationBuilder.DropTable(
                name: "mall_product_attr_key");

            migrationBuilder.DropTable(
                name: "mall_product_attr_value");

            migrationBuilder.DropTable(
                name: "mall_product_category");

            migrationBuilder.DropTable(
                name: "mall_product_sku");

            migrationBuilder.DropTable(
                name: "mall_product_sku_stock_history");

            migrationBuilder.DropTable(
                name: "mall_product_type");

            migrationBuilder.DropTable(
                name: "sys_menu");

            migrationBuilder.DropTable(
                name: "sys_role");

            migrationBuilder.DropTable(
                name: "sys_role_menu");

            migrationBuilder.DropTable(
                name: "sys_user");

            migrationBuilder.DropTable(
                name: "sys_user_address");

            migrationBuilder.DropTable(
                name: "sys_user_role");

            migrationBuilder.DropTable(
                name: "mall_order_detail");

            migrationBuilder.DropTable(
                name: "mall_order");
        }
    }
}
