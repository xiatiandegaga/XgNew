// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
using Domain.Entity;
using Domain.Entity.Identity;
using IdentityApi.Domain.EntityMap;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Xg.Cloud.Core;

namespace Domain.EntityMap.Identity
{
    public class UserMap : BaseEntityConfiguration<User>
    {
        public override void ConfigureCustomFields(EntityTypeBuilder<User> builder)
        {
            // ===================== 表配置 =====================
            builder.ToTable("sys_user");

            // ===================== 字段配置 =====================
            // 登录账号
            builder.Property(t => t.Account)
                   .HasColumnName("account")
                   .HasMaxLength(50)
                   .IsRequired()
                   .HasComment("登录账号");

            // 密码（加密存储）
            builder.Property(t => t.Password)
                   .HasColumnName("password")
                   .HasMaxLength(200)
                   .IsRequired()
                   .HasComment("加密后的密码");

            // 真实姓名
            builder.Property(t => t.RealName)
                   .HasColumnName("real_name")
                   .HasMaxLength(50)
                   .HasComment("用户真实姓名");

            // 用户昵称
            builder.Property(t => t.NickName)
                   .HasColumnName("nick_name")
                   .HasMaxLength(50)
                   .HasComment("用户显示昵称");

            // 联系电话
            builder.Property(t => t.Mobile)
                   .HasColumnName("mobile")
                   .HasMaxLength(50)
                   .HasComment("用户手机号");

            // 头像地址
            builder.Property(t => t.Img)
                   .HasColumnName("img")
                   .HasMaxLength(500)
                   .HasComment("头像URL地址");

            // 会员积分
            builder.Property(t => t.MemberPoint)
                   .HasColumnName("member_point")
                   .HasComment("会员积分");

            // 手机验证状态（0-未验证 1-已验证）
            builder.Property(t => t.VerifyMobileStatus)
                   .HasColumnName("verify_mobile_status")
                   .IsRequired()
                   .HasComment("手机验证状态");

            // 手机验证时间
            builder.Property(t => t.VerifyMobileTime)
                   .HasColumnName("verify_mobile_time")
                   .HasComment("最后一次手机验证时间");

            // 推荐人层级关系
            builder.Property(t => t.Pid)
                   .HasColumnName("pid")
                   .HasComment("直接上级用户ID");

            builder.Property(t => t.ReferId)
                   .HasColumnName("refer_id")
                   .HasComment("推荐关系链ID");

            // 第三方平台ID
            builder.Property(t => t.ThirdpartId)
                   .HasColumnName("thirdpart_id")
                   .HasMaxLength(200)
                   .HasComment("第三方平台唯一标识");

            // 用户类型（1-前台用户 2-后台用户）
            builder.Property(t => t.UserCategory)
                   .HasColumnName("user_category")
                   .IsRequired()
                   .HasComment("用户类型: 1-前台用户, 2-后台用户");

            // 是否系统管理员（0-否 1-是）
            builder.Property(t => t.IsSystem)
                   .HasColumnName("is_system")
                   .IsRequired()
                   .HasComment("是否系统管理员");
        }
    }
}
