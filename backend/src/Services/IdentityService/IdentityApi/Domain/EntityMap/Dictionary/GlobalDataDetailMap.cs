// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
using Domain.Entity;
using Domain.Entity.Dictionary;
using IdentityApi.Domain.EntityMap;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Xg.Cloud.Core;

namespace Domain.EntityMap.Dictionary
{
    public class GlobalDataDetailMap : BaseEntityConfiguration<GlobalDataDetail>
    {
        public override void ConfigureCustomFields(EntityTypeBuilder<GlobalDataDetail> builder)
        {
            // ===================== 表结构配置 =====================
            builder.ToTable("dic_global_data_detail"); // 统一 snake_case

            // ===================== 字段配置 =====================

            // 字典明细编码（与主表关联）
            builder.Property(t => t.Code)
                   .HasColumnName("code")
                   .HasMaxLength(50)
                   .IsRequired()
                   .HasComment("字典明细编码");

            // 显示名称
            builder.Property(t => t.Name)
                   .HasColumnName("name")
                   .HasMaxLength(100)
                   .IsRequired()
                   .HasComment("显示名称");

            // 备注说明
            builder.Property(t => t.Remark)
                   .HasColumnName("remark")
                   .HasMaxLength(200)
                   .HasComment("附加描述信息");

            // 常量键值（系统映射用）
            builder.Property(t => t.ConstKey)
                   .HasColumnName("const_key")
                   .HasMaxLength(100)
                   .IsRequired()
                   .HasComment("字典关键字");

            // 排序序号
            builder.Property(t => t.SortNo)
                   .HasColumnName("sort_no")
                   .HasDefaultValue(0)  
                   .HasComment("排序序号（数值越小越靠前）");

           
        }
    }
}
